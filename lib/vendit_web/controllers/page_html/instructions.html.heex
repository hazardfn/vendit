<.flash_group flash={@flash} />
<div class="relative isolate overflow-hidden bg-white px-6 py-24 sm:py-32 lg:overflow-visible lg:px-0">
  <div class="absolute inset-0 -z-10 overflow-hidden">
    <svg
      class="absolute left-[max(50%,25rem)] top-0 h-[64rem] w-[128rem] -translate-x-1/2 stroke-gray-200 [mask-image:radial-gradient(64rem_64rem_at_top,white,transparent)]"
      aria-hidden="true"
    >
      <defs>
        <pattern
          id="e813992c-7d03-4cc4-a2bd-151760b470a0"
          width="200"
          height="200"
          x="50%"
          y="-1"
          patternUnits="userSpaceOnUse"
        >
          <path d="M100 200V.5M.5 .5H200" fill="none" />
        </pattern>
      </defs>
      <svg x="50%" y="-1" class="overflow-visible fill-gray-50">
        <path
          d="M-100.5 0h201v201h-201Z M699.5 0h201v201h-201Z M499.5 400h201v201h-201Z M-300.5 600h201v201h-201Z"
          stroke-width="0"
        />
      </svg>
      <rect
        width="100%"
        height="100%"
        stroke-width="0"
        fill="url(#e813992c-7d03-4cc4-a2bd-151760b470a0)"
      />
    </svg>
  </div>
  <div class="mx-auto grid max-w-2xl grid-cols-1 gap-x-8 gap-y-16 lg:mx-0 lg:max-w-none lg:grid-cols-2 lg:items-start lg:gap-y-10">
    <div class="lg:col-span-2 lg:col-start-1 lg:row-start-1 lg:mx-auto lg:grid lg:w-full lg:max-w-7xl lg:grid-cols-2 lg:gap-x-8 lg:px-8">
      <div class="lg:pr-4">
        <div class="lg:max-w-lg">
          <p class="text-base font-semibold leading-7 text-indigo-600">
            For all your virtual snacking needs!
          </p>
          <h1 class="mt-2 text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">
            Usage Instructions
          </h1>
          <p class="mt-6 text-xl leading-8 text-gray-700">
            This is a user guide on how to use the vending machine app as well as advertising some of its features.
          </p>
        </div>
      </div>
    </div>
    <div class="-ml-12 -mt-12 p-12 lg:sticky lg:top-4 lg:col-start-2 lg:row-span-2 lg:row-start-1 lg:overflow-hidden">
      <img class="max-w-none shadow-l" src={~p"/images/logo.png"} alt="" />
    </div>
    <div class="lg:col-span-2 lg:col-start-1 lg:row-start-2 lg:mx-auto lg:grid lg:w-full lg:max-w-7xl lg:grid-cols-2 lg:gap-x-8 lg:px-8">
      <div class="lg:pr-4">
        <div class="max-w-xl text-base leading-7 text-gray-700 lg:max-w-lg">
          <p>
            In order to see the vending machine you must first register and login. All users by default are registered with the role buyer, the vending machine comes preloaded with some snacks so you can get running immediately. When you run out of snacks the program is preloaded with an admin account, you can use this to add more snacks, view the technical documentation for those details.
          </p>
          <p>
            I am hoping that the UI of the vending machine from the buyer perspective will be fairly self-explanatory
          </p>
          <ul role="list" class="mt-8 space-y-8 text-gray-600">
            <li class="flex gap-x-3">
              <.icon name="hero-at-symbol" class="mt-1 h-5 w-5 flex-none text-indigo-600" />
              <span>
                <strong class="font-semibold text-gray-900">Local Email.</strong>
                The vending machine supports resetting passwords and email confirmation, if compiled in a development environment you can view the mailbox at the /dev/mailbox endpoint. Confirmation is not enforced to prevent wasting your time but easily could be.
              </span>
            </li>
            <li class="flex gap-x-3">
              <.icon name="hero-bolt" class="mt-1 h-5 w-5 flex-none text-indigo-600" />
              <span>
                <strong class="font-semibold text-gray-900">Fully LiveView</strong>
                Implemented fully in phoenix and liveview, makes use of global broadcasting. You can test this by logging in as 2 separate users - if you log in as a seller and adjust the product availability, buyers will see it update in real-time on the UI. As multiple buyers begin to buy things other users will see the product availability change in realtime.
              </span>
            </li>
            <li class="flex gap-x-3">
              <.icon name="hero-circle-stack" class="mt-1 h-5 w-5 flex-none text-indigo-600" />
              <span>
                <strong class="font-semibold text-gray-900">SQLite.</strong>
                To prevent too much operational overhead on the reviewers side I have opted to use SQLite. This is a local database on the file system and doesn't require the reviewer to set up a larger database engine such as Postgres/MySQL/MSSQL. Due to the use of Ecto this can be changed without many (if any) code changes
              </span>
            </li>
          </ul>
          <p class="mt-8">
            There are 2 seller accounts preloaded when you run the database seed file. They have the emails: "someseller@mvpmatch.co" and "admin@mvpmatch.co", both have the password: "password1234".
          </p>
        </div>
      </div>
    </div>
  </div>
</div>
